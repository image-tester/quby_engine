%label.main(for="answer_#{question.key}")= question.title
.description-and-fields
  .description
    - unless question.description.blank?
      :markdown
        #{question.description}
  .fields(id="answer_#{question.key}_input")
    - question.options.each do |opt|
      - if opt.inner_title
        .inner-title= opt.description
      - else
        .option
          .radiocheckwrapper
            - if question.uncheck_all_option == opt.key
              = check_box(:answer, "#{question.key}_#{opt.key}", {:onClick => "setAllCheckboxes(this.checked, '#{question.key}_#{question.check_all_option}', '#{question.key}_#{question.uncheck_all_option}', '#{question.key}', ''); handleDisableCheckboxSubQuestions(this);", :class => subquestion ? "subinput" : ""})
            - elsif question.check_all_option == opt.key
              = check_box(:answer, "#{question.key}_#{opt.key}", {:onClick => "setAllCheckboxes(this.checked, '#{question.key}_#{question.check_all_option}', '#{question.key}_#{question.uncheck_all_option}', '#{question.key}', '1'); handleDisableCheckboxSubQuestions(this);", :class => subquestion ? "subinput" : ""})
            - else
              = check_box(:answer, "#{question.key}_#{opt.key}", {:onClick => "correctAllNothingCheckboxes(this.checked, '#{question.key}_#{question.check_all_option}', '#{question.key}_#{question.uncheck_all_option}'); handleDisableCheckboxSubQuestions(this);", :class => subquestion ? "subinput" : ""})
          %label(for="answer_#{question.key}_#{opt.key}")
            %span= opt.description
          - unless opt.questions.empty?
            .subquestions= render :partial => "answers/paged/item", :collection => opt.questions,  :locals => {:subquestion => true}