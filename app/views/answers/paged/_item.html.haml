/ Begin _item.html.haml
- subquestion ||= false
- disabled ||= false
- @answer.to_hide ||= [] 
- itemclasses = [item.type, item.presentation]
- extra_data = nil
- if item.class.name == "Items::Question"
  - return if item.table
  - itemclasses << "errors" unless @answer.errors[item.key].empty?
  - if subquestion
    - itemclasses << 'subitem'
    - return if item.presentation == :next_to_title 
  - itemclasses << item.question_group  if item.question_group
  - itemclasses << 'hidden' if @answer.to_hide.include?(item.key)
  - extra_data = item.extra_data

- if item.raw_content
  - if item.raw_content[:paged]
    = raw item.raw_content[:paged]
  - else 
    = raw item.raw_content
- else
  .item{:class => itemclasses, :data => extra_data}
    - case item.class.name
    - when "Items::Css"
      :css
        =#{item.raw_content}
    - when "Items::Text"
      .text
        :markdown
          #{raw(item)}
    - when "Items::Question"
      - return if (item.type == :hidden)
      - return if (item.display_modes and (not item.display_modes.include?(:paged)))
      = render :partial => 'answers/shared/validations', :locals => {:question => item, :answer => @answer}        
      
      - case item.type
      - when :string
        = render :partial => "answers/paged/item_question_string", :locals => {:question => item, :subquestion => subquestion, :disabled => disabled}
      - when :textarea
        = render :partial => "answers/paged/item_question_textarea", :locals => {:question => item, :subquestion => subquestion, :disabled => disabled}
      - when :integer, :float
        = render :partial => "answers/paged/item_question_number", :locals => {:question => item, :subquestion => subquestion, :disabled => disabled}
      - when :radio
        = render :partial => "answers/paged/item_question_radio", :locals => {:question => item, :subquestion => subquestion, :disabled => disabled}
      - when :date
        = render :partial => "answers/paged/item_question_date", :locals => {:question => item, :subquestion => subquestion, :disabled => disabled}
      - when :check_box
        = render :partial => "answers/paged/item_question_check_box", :locals => {:question => item, :subquestion => subquestion, :disabled => disabled}
      - when :scale
        = render :partial => "answers/paged/item_question_scale", :locals => {:question => item, :subquestion => subquestion, :disabled => disabled}
      - when :select
        = render :partial => "answers/paged/item_question_select", :locals => {:question => item, :subquestion => subquestion, :disabled => disabled}
      - else
        %strong
          Error: unknown question type
          = item.type
          for question
          = item.key
    - when "Items::Table"
      = render :partial => "answers/table/table", :locals => {:table => item, :to_hide => @answer.to_hide}
    - else
      Error: unknown item type
      = item.class.name
      for question
      = item.key
/ End _item.html.haml