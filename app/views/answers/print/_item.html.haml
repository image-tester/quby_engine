/ Begin _item.html.haml
- subquestion ||= false
- disabled ||= false
- previous_item ||= nil
- itemclasses = [item.type, item.presentation]
- @answer.to_hide ||= []
- case item.class.name
- when "Items::Question"
  -# return if item.table 
  -# return if @answer.send(item.key).blank?
  - itemclasses << 'hidden' if @answer.to_hide.include?(item.key) 
  - doublewide = item.options.size <= 5 
  - itemclasses << "notbulkitem"
  - itemclasses << "errors" unless @answer.errors[item.key].empty?
  - itemclasses << item.question_group if item.question_group
  - itemclasses << 'subitem' if subquestion
  - itemclasses << 'first' unless previous_item
- when "Items::Table"
  - return

- if item.raw_content and item.class.name != "Items::Text" 
  - if item.raw_content[:print]
    = raw item.raw_content[:print]
  - elsif item.raw_content[:bulk]
    = raw item.raw_content[:bulk]
  - else
    = raw item.raw_content
- else
  
  - case item.class.name
  - when "Items::Css"
    .item{:class => itemclasses}
      :css
        #{item.raw_content}
  - when "Items::Text"
    - if item.display_in.andand.include?(:print)
      .item{:class => itemclasses}
        .text
          = raw item.text
  - when "Items::Question"
    .item{:class => itemclasses}
      - return if (item.type == :hidden )
      - case item.type
      - when :string, :textarea, :integer, :float, :date
        = render :partial => "answers/print/item_question_string", :locals => {:question => item, :subquestion => subquestion, :disabled => disabled}
      - when :radio, :scale
        = render :partial => "answers/print/item_question_radio", :locals => {:question => item, :subquestion => subquestion, :disabled => disabled}
      - when :check_box
        = render :partial => "answers/print/item_question_check_box", :locals => {:question => item, :subquestion => subquestion, :disabled => disabled}
      - when :select
        = render :partial => "answers/print/item_question_select", :locals => {:question => item, :subquestion => subquestion, :disabled => disabled}
      - else
        %strong
          Error: unknown question type
          = item.type
          for question
          = item.key
  - when "Items::Table"
    -# do nothing
  - else
    Error: unknown item type
    = item.class.name
/ End _item.html.haml
