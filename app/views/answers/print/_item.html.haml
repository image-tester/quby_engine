/ Begin _item.html.haml
- subquestion ||= false
- disabled ||= false
- previous_item ||= nil
- itemclasses = [item.type, item.presentation]
- @answer.to_hide ||= []
- if item.is_a?(Items::Question)
  - return if item.table 
  -# return if @answer.send(item.key).blank?
  - itemclasses << 'hidden' if @answer.to_hide.include?(item.key) 
  - doublewide = item.options.size <= 5 
  - itemclasses << "notbulkitem"
  - itemclasses << "errors" unless @answer.errors[item.key].empty?
  - itemclasses << item.question_group if item.question_group
  - itemclasses << 'subitem' if subquestion
  - itemclasses << 'first' unless previous_item

- if item.raw_content and item.class.name != "Items::Text" 
  - if item.raw_content[:print]
    = raw item.raw_content[:print]
  - elsif item.raw_content[:bulk]
    = raw item.raw_content[:bulk]
  - else
    = raw item.raw_content
- else
  .item{:class => itemclasses}
    - case item.class.name
    - when "Items::Css"
      :css
        #{item.raw_content}
    - when "Items::Text"
      -#Skipping text in print view
    - when "Items::Question"
      - return if (item.type == :hidden )
      - case item.type
      - when :string, :textarea, :integer, :float, :date
        = render :partial => "answers/print/item_question_string", :locals => {:question => item, :subquestion => subquestion, :disabled => disabled}
      - when :radio, :scale
        = render :partial => "answers/print/item_question_radio", :locals => {:question => item, :subquestion => subquestion, :disabled => disabled}
      - when :check_box
        = render :partial => "answers/print/item_question_check_box", :locals => {:question => item, :subquestion => subquestion, :disabled => disabled}
      - when :select
        = render :partial => "answers/print/item_question_select", :locals => {:question => item, :subquestion => subquestion, :disabled => disabled}
      - when :quantity
        = render :partial => "answers/print/item_question_quantity", :locals => {:question => item, :subquestion => subquestion, :disabled => disabled}
      - else
        %strong
          Error: unknown question type
          = item.type
          for question
          = item.key
    - when "Items::Table"
      = render :partial => "answers/table/table", :locals => {:table => item, :to_hide => @answer.to_hide}
    - else
      Error: unknown item type
      = item.class.name
      for question
      = item.key
/ End _item.html.haml
