:javascript
  var panel_validations = {}
  //for setting values of raw_content
  var extra_question_values = #{@answer.extra_question_values}
  //for showing validations of raw content
  var extra_failed_validations = #{@answer.extra_failed_validations}

- content_for(:page_title, @questionnaire.title)

    
- form_tag questionnaire_answer_path(@questionnaire, @answer), :method => :put, :class => [@questionnaire.key, session[:display_mode]].join(" "), :autocomplete => "off" do
  = render :partial => "answers/hotkey_dialog"
  - all_items = @questionnaire.panels.map(&:items).flatten
  - previous_item = nil
  - @questionnaire.panels.each_with_index do |panel, panel_counter|
    %fieldset{:id => "panel#{panel_counter}", :class => "panel"}
      :javascript
        panel_validations["panel#{panel_counter}"] = #{get_validation_json(panel.validations)};

      - if panel.title
        %h1&= panel.title

      - panel.items.each_with_index do |item, idx|
        - next_item = all_items[all_items.index(item)]
        = render :partial => "answers/bulk/item", :object => item, :locals => { :item_counter => idx, :items => panel.items, :previous_item => previous_item, :next_item => next_item }
        - previous_item = item if item.class.name == "Items::Question"
  .buttons
    .prev &nbsp;
    -#.print
    -#  %a(href="#" onClick="window.print(); return false" style="margin-right: 1em") Print antwoorden
    .save
      = submit_tag "Klaar"