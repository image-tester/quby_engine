- if (not previous_item) or (not previous_item.respond_to?(:options)) or (previous_item.options.map(&:value) != question.options.map(&:value))
  = render :partial => "answers/bulk/item_radio_check_scale_options", :object => question

%label.main(for="answer_#{question.key}")= question.title
.description-and-fields
  .fields(id="answer_#{question.key}_input" class="options#{question.options.size}")
    - question.options.each_with_index do |opt, idx|
      - cls = []
      - cls << "first" if idx <= 0
      - cls << "last" if idx >= (question.options.size - 1)
      .option(class=cls)
        - radio_classes = []
        - radio_classes << "subinput" if subquestion
        - radio_classes << "deselectable" if question.deselectable
        = radio_button(:answer, question.key, opt.key,
          {:onClick => "handleDisableRadioSubQuestions(this); handleHideQuestions(this,#{opt.hides_questions.to_json}, #{question.hides_questions.to_json})", :class => radio_classes})