- show_values = (question.show_values == true or question.show_values == :all or question.show_values == :bulk)
- if not_bulk
  = render :partial => "answers/paged/item_question_radio", :locals => {:answer => @answer, :question => question, :subquestion => false, :disabled => false}
- else
  %label.main(for="answer_#{question.key}")
    = raw(question.title)
    - subq = question.options.last.questions.first
    - if subq.andand.presentation == :next_to_title and subq.type == :string
      = render :partial => "answers/shared/inline_text_field", :locals => {:answer => @answer, :question => subq}
  .description-and-fields
    .fields{:id => question.html_id, :class => "options#{question.options.size}"}
      - question.options.each_with_index do |opt, idx|
        - next if opt.inner_title
        - checked = @answer.send(question.key) == opt.key.to_s
        - next if (opt.hidden and not checked)
        - handle_hide_questions(question,opt,@questionnaire) if checked
        - cls = []
        - cls << "first" if idx <= 0
        - cls << "last" if idx >= (question.options.size - 1)
        - cls << "optionwidth#{question.options.size}"
        - cls << "deselectable" if question.deselectable
        .option{:class => cls, :title => opt.description, :for => question.key}
          - radio_classes = []
          - radio_classes << "subinput" if subquestion
          - radio_classes << "deselectable" if question.deselectable
          = radio_button(:answer, question.key, opt.key, {:hides => opt.hides_questions.to_json || "[]", :allhidden => question.hides_questions.to_json ||"[]", :class => radio_classes, :disabled => disabled ? "" : nil})
          - if show_values
            %span.value= opt.value
      = radio_button_tag(question.key, "DESELECTED_RADIO_VALUE", false, :class => "hidden", :name => "answer[#{question.key}]")
