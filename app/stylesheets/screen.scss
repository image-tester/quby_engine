/* Welcome to Compass.
 * In this file you should write your main styles. (or centralize your imports)
 * Import this file using the following HTML or equivalent:
 * <link href="/stylesheets/screen.css" media="screen, projection" rel="stylesheet" type="text/css" /> */

@import "compass/reset";
@import "blueprint/grid";
@import "blueprint/typography";
//@import "custom-inputs.sass";

// Variables
$masthead_bg: #0f72a4;

// Partials
@import "partials/text.scss";

body {
  font-family: Helvetica, sans-serif;
  font-size: 0.8em;
  background-color: #eeeeee; 
}

#mastfoot {
  margin: 0 auto;
  max-width: 900px;
  text-align: right;
  color: #aaaaaa;

  &:before {
    content: "\2014"; 
  }
  
  &:after {
    content: "\2014"; 
  } 
}

#noscript-warning {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  background: yellow;
  border: 4px solid red;
  color: red;
  font-size: 1.5em;
  text-align: center;
}

#content {
  margin: 8em auto 0em auto;
  
  .flash {
    margin-bottom: 1em;
    div {
      padding: 5px;
      background: #333333;
      border: 1px solid black;
    }
    
    .error {
      background: #ffbbbb;
      border: 1px solid #ff3333;
    }
  }
  
  .panel {
    @include container;
    
    padding: 3em $blueprint-grid-outer-width 1.5em;
    line-height: 18px;
    
    background: white;
    border: 10px solid #dddddd;
    margin-bottom: 2em;
    
    h1 {
      font-size: 1.5em;
      font-weight: bold;
      margin-bottom: 1.2em;
      z-index: 400;
    }
    
    .buttons {
      @include column(24, true);
      margin: 1.5em (-$blueprint-grid-outer-width) -1.5em;
      padding: 1.5em $blueprint-grid-outer-width;
      border-top: 1px dotted #d6d6d6;
      background: #f3f3f3;

      .prev { @include column(6); }
      .abort { @include column(12); text-align: center; }
      .print { @include column(12); text-align: center; }
      .next { @include column(6, true); text-align: right; }
      .save { @include column(6, true); text-align: right; }
    }
    
    &.first .buttons {
      .abort { @include prepend(6); }
      .print { @include prepend(6); }
    }
    
    .item { 
      @include column(24, true);
      margin-bottom: 18px;

      &.hidden {
        display: none;
      }

      &.errors {
        border: 1px solid red;
        padding: 0.4em;
        .error {
          background: #ffaaaa;
          color: #550000;
          border: 1px solid red;
          padding: 0.3em;
          margin-bottom: 0.3em;
        }
      }
      
      label.main {
        @include column(6);
        font-weight: bold;
      }
      
      .text {
        @include text;
      }

      .description-and-fields {
        @include column(18, true);

        // have to say div.description, because scale uses a table, and including column on tds would break
        div.description { @include text; @include column(18, true); }
        .fields { @include column(18, true); }
      }

      // Specific CSS for presentation styles

      &.horizontal {
        label.main { @include column(24, true); @include append-bottom; }
        .description-and-fields { @include column(24, true); }
        .description { @include column(24, true); }
        .fields { @include column(24, true); }
      }

      // Specific CSS for certain item types
     
      &.string {
        input { width: 100%; }
      }

      &.radio, &.check_box {
        .inner-title {
          @include column(18, true);
          margin-top: 1.5em;
          margin-bottom: 1.5em;
          font-weight: bold;
        }

        .option {
          @include column(18, true); 
          
          .radiocheckwrapper { @include column(1); }
          label              { @include column(17, true); }

          &.show_values {
            .value { @include column(1); text-align: center; }
            label { @include column(16, true); }
          }

          .subquestions {
            @include prepend(1);
            @include column(17);

            .item { 
              @include column(17); 
              input { width: auto; }
            }
          }
        }
      }

      &.scale {
        // beware, here be holycoding
        // not sure why i'm including options1, why the frak would you have only one option?
        .fields.options1  table { @include column( 1, true); @include append(17); }
        .fields.options2  table { @include column( 2, true); @include append(16); }
        .fields.options3  table { @include column( 3, true); @include append(15); }
        .fields.options4  table { @include column( 4, true); @include append(14); }
        .fields.options5  table { @include column( 5, true); @include append(13); }
        .fields.options6  table { @include column( 6, true); @include append(12); }
        .fields.options7  table { @include column( 7, true); @include append(11); }
        .fields.options8  table { @include column( 8, true); @include append(10); }
        .fields.options9  table { @include column( 9, true); @include append( 9); }
        .fields.options10 table { @include column(10, true); @include append( 8); }
        .fields.options11 table { @include column(11, true); @include append( 7); }
        .fields.options12 table { @include column(12, true); @include append( 6); }
        .fields.options13 table { @include column(13, true); @include append( 5); }
        .fields.options14 table { @include column(14, true); @include append( 4); }
        .fields.options15 table { @include column(15, true); @include append( 3); }
        .fields.options16 table { @include column(16, true); @include append( 2); }
        .fields.options17 table { @include column(17, true); @include append( 1); }
        .fields.options18 table { @include column(18, true);                      }
        // more than 18 options is future work

        &.horizontal {
          // we need to reset this to be table cells
          .description { float: none; display: table-cell; }
        }

        .option, .description { 
          @include span(2);
          border: 0;
          text-align: center;
        }
        
        .option.last, .description.last { @include last; }
      }
    }
  }
  
  .bulk {
    border-top: 10px solid #dddddd;
    
    .panel {
      margin-bottom: 0;
      padding-bottom: 0;
      border-bottom: 0;
      border-top: 0;
    }
    
    .buttons { top: 0; }
  }
}

#flash {
  padding: 0.7em;
  margin: 0 0 2em 0;
  border: 1px solid black;
  &.notice {
    background-color: #ffffcc;
    border-color: #ffcc66;
  }
  &.success {
    background-color: #ccffcc;
    border-color: #11cc11;
  }
  &.error {
    background-color: #ffcccc;
    border-color: #cc1111;
  }
}

table {
  width: 100%;
  border-collapse: collapse;
  margin-bottom: 1.5em;
  thead tr th {
    background: black;
    color: white;
    padding: 5px;
    border: 1px solid black;
  }
  
  tr.even {
    background: #e9e9e9;
  }
  
  td {
    padding: 5px;
    border: 1px solid #cecece;
    vertical-align: top;
  }
}

pre {
  font-family: "Deja Vu Sans Mono", "Courier New", "Courier", monospace;
}

.hidden { display: none; }

.question {
  background: #e5e5e5;
  margin: 2em;
  padding: 2em;
}

//jquery placeholder styling
//match placeholder/watermark padding to border+padding for input element
label.placeholder {
  cursor: text;
  padding: 4px 4px 4px 4px;
  color: #999999;
}

//html5 placeholder support
input::-webkit-input-placeholder, textarea::-webkit-input-placeholder {
  color: #999999;
}

input:placeholder, textarea:placeholder {
  color: #999999;
}

.focus {
    background: #cce8ed;
}